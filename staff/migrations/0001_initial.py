# Generated by Django 3.1.7 on 2021-06-10 16:39

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullAddress', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='BookDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('font', models.IntegerField()),
                ('paperSize', models.CharField(max_length=100)),
                ('colorFont', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='BookStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cartType', models.CharField(max_length=100)),
                ('status', models.IntegerField(choices=[(1, 'active'), (2, 'inactive')], max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ClothingType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Fullname',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=100)),
                ('lastname', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saleOff', models.FloatField()),
                ('price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('ad', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='staff.address')),
            ],
        ),
        migrations.CreateModel(
            name='OrderStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(max_length=100)),
                ('additionalFee', models.FloatField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price', models.FloatField()),
                ('image', models.ImageField(upload_to='')),
                ('type', models.CharField(choices=[('1', 'Quần Áo'), ('2', 'Sách'), ('3', 'Điện Tử')], max_length=10)),
                ('status', models.CharField(choices=[('True', 'Đang Kinh Doanh'), ('False', 'Ngừng Kinh Doanh')], max_length=10)),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.manufacturer')),
            ],
        ),
        migrations.CreateModel(
            name='Shipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateShip', models.DateTimeField(max_length=100)),
                ('receiveDate', models.DateTimeField(max_length=100)),
                ('bill', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='staff.bill')),
            ],
        ),
        migrations.CreateModel(
            name='Credit',
            fields=[
                ('payment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='staff.payment')),
                ('creditNumber', models.BigIntegerField()),
            ],
            bases=('staff.payment',),
        ),
        migrations.CreateModel(
            name='DomesticShip',
            fields=[
                ('shipment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='staff.shipment')),
                ('distance', models.BigIntegerField()),
                ('district', models.CharField(max_length=100)),
            ],
            bases=('staff.shipment',),
        ),
        migrations.CreateModel(
            name='Electronic',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='staff.product')),
                ('desc', models.CharField(max_length=100)),
            ],
            bases=('staff.product',),
        ),
        migrations.CreateModel(
            name='GlobalShip',
            fields=[
                ('shipment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='staff.shipment')),
                ('country', models.CharField(max_length=100)),
                ('typeDelivery', models.CharField(max_length=100)),
            ],
            bases=('staff.shipment',),
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='staff.user')),
                ('workAddress', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.address')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('staff.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='staff.address')),
            ],
        ),
        migrations.CreateModel(
            name='ShipmentStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=100)),
                ('shipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.shipment')),
            ],
        ),
        migrations.CreateModel(
            name='ProductInStock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock', models.IntegerField()),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.item')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.product')),
                ('storage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.storage')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.product')),
            ],
        ),
        migrations.CreateModel(
            name='OrderStatusLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orderStatus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.orderstatus')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saleOff', models.FloatField()),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('payment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='staff.payment')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.orderstatus')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('shipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.shipment')),
            ],
        ),
        migrations.CreateModel(
            name='ItemInCart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.cart')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.item')),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='staff.order')),
            ],
        ),
        migrations.AddField(
            model_name='item',
            name='product',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='staff.product'),
        ),
        migrations.CreateModel(
            name='CreditCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creditNumber', models.BigIntegerField()),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=100)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.item')),
            ],
        ),
        migrations.CreateModel(
            name='BookGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bookDescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.bookdescription')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.genre')),
            ],
        ),
        migrations.AddField(
            model_name='bookdescription',
            name='bookStatus',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='staff.bookstatus'),
        ),
        migrations.AddField(
            model_name='bill',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.order'),
        ),
        migrations.AddField(
            model_name='user',
            name='address',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='staff.address'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='Appliance',
            fields=[
                ('electronic_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='staff.electronic')),
                ('width', models.CharField(max_length=100)),
                ('height', models.FloatField()),
                ('length', models.FloatField()),
                ('type_of_appliance', models.CharField(max_length=100)),
            ],
            bases=('staff.electronic',),
        ),
        migrations.CreateModel(
            name='BusinessStaff',
            fields=[
                ('staff_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='staff.staff')),
                ('test', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('staff.staff',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Mobile',
            fields=[
                ('electronic_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='staff.electronic')),
                ('dimension', models.FloatField()),
                ('device_type', models.CharField(max_length=100)),
            ],
            bases=('staff.electronic',),
        ),
        migrations.CreateModel(
            name='CreditCardPayment',
            fields=[
                ('payment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='staff.payment')),
                ('creditCard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.creditcard')),
            ],
            bases=('staff.payment',),
        ),
        migrations.CreateModel(
            name='Clothing',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='staff.product')),
                ('material', models.CharField(max_length=100)),
                ('desc', models.CharField(max_length=100)),
                ('type_of_clothing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.clothingtype')),
            ],
            bases=('staff.product',),
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='staff.product')),
                ('bookDescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.bookdescription')),
            ],
            bases=('staff.product',),
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sex', models.CharField(max_length=100)),
                ('age', models.IntegerField()),
                ('organization', models.CharField(max_length=100)),
                ('fullname', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.fullname')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.book')),
            ],
        ),
        migrations.CreateModel(
            name='StorageStaff',
            fields=[
                ('staff_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='staff.staff')),
                ('storage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.storage')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('staff.staff',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='OrderStatusChangeLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orderStatusLogs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.orderstatuslogs')),
                ('businessStaff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.businessstaff')),
            ],
        ),
    ]
